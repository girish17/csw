// Akka config file for the Config Service

akka {
//  log-dead-letters = 0
//  log-dead-letters-during-shutdown = off
//  loglevel = "INFO"
//  loggers = ["akka.event.slf4j.Slf4jLogger"]
//  stdout-loglevel = OFF

  logLevel = "INFO"

  // The default is on, which means send HEAD requests as GET, which we don't want here
  http.server.transparent-head-requests = off

  actor {
    provider = remote
  }
  remote {
    log-remote-lifecycle-events = off
    //    artery {
    //      enabled = on
    //      embedded-media-driver = off
    //      canonical.port = 0
    //      advanced.idle-cpu-level=1
    //    }
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      // Port 0 means port number will be automatically chosen (use location service to find)
      port = 0
    }
  }
}

// Default settings for the config service
csw.services.cs {

  // Name of this config service
  name = "Config Service"

  // Set to true to use svn to manage files, or false to use Git
  use-svn = true

  // The URI of the main svn or git repository used by the Config Service.
  // Note: Only file:// protocol supported at this point, since it seems to makes sense to
  // have the repo on the same host as the config service actor.
  main-repository = "file:///tmp/CsTestMainRepo$CSW_SERVICE_PREFIX/"

  // If using git, the path to the local git repository, which will sync with the main git repository
  // (Not used when use-svn is true)
  local-repository = "/tmp/CsTestLocalRepo$CSW_SERVICE_PREFIX/"

  // If this section is missing, the config service http server will not be started
  http {
    // Set to true to enable the http server
    enabled = true

    // Host to listen to for config service http server (can also use "0.0.0.0")
    interface = localhost

    // Port to listen on for config service http server
    port = 8547
  }

  // Timeout for ask messages
  timeout = 5000 milliseconds
}
